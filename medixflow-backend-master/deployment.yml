apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: medixflow-backend-deplyoment
  namespace: medixflow-backend-9431644
  labels:
    app: medixflow
spec:
  template:
    metadata:
      labels:
        app: medixflow
        tier: backend
    spec:
      containers:
      - name: medixflow-container
        image: eu.gcr.io/medixflow-222800/medixflow-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
        volumeMounts:
          - name: tls
            mountPath: /etc/tls
            readOnly: true
        env:
          # The mounting of the envinorment variable forces kubernetes to recreate the pod on every deployment, which will result in kubernetes pulling the newly created container image from the container registry
          - name: CI_COMMIT_SHA
            value: '${CI_COMMIT_SHA}'
          - name: TLS_CERT
            value: /etc/tls/tls.crt
          - name: TLS_KEY
            value: /etc/tls/tls.key
      volumes:
      - name: tls
        secret:
          secretName: medixflow-letsencrypt-tls
---
apiVersion: v1
kind: Service
metadata:
  name: medixflow-backend
  namespace: medixflow-backend-9431644
  labels:
    app: medixflow
  annotations:
    service.alpha.kubernetes.io/app-protocols: '{"medixflow-tls":"HTTPS"}'
spec:
  type: NodePort
  selector:
    app: medixflow
    tier: backend
  ports:
  - name: medixflow-tls
    port: 443
    targetPort: 8443
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: medixflow-ingress
  namespace: medixflow-backend-9431644
  annotations:
    kubernetes.io/ingress.global-static-ip-name: medixflow-ip
    kubernetes.io/ingress.allow-http: "false" # disable HTTP
  labels:
    app: medixflow
spec:
  tls:
    - secretName: medixflow-letsencrypt-tls
  backend:
    serviceName: medixflow-backend
    servicePort: 443